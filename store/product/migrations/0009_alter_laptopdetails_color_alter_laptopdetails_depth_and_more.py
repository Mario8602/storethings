# Generated by Django 4.1.1 on 2023-03-26 14:46

from django.db import migrations, models
import django.db.models.deletion
import product.models


class Migration(migrations.Migration):

    dependencies = [
        ('product', '0008_laptopdetails_depth_laptopdetails_weight_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='laptopdetails',
            name='color',
            field=models.CharField(blank=True, max_length=40, null=True, verbose_name='Цвет'),
        ),
        migrations.AlterField(
            model_name='laptopdetails',
            name='depth',
            field=models.FloatField(blank=True, null=True, verbose_name='Глубина'),
        ),
        migrations.AlterField(
            model_name='laptopdetails',
            name='frequency',
            field=models.CharField(choices=[('No info', 'no information'), ('60', '60 ГЦ'), ('144', '144 ГЦ'), ('160', '160 ГЦ'), ('240', '240 ГЦ'), ('360', '360 ГЦ')], default='No info', max_length=50, verbose_name='Частота'),
        ),
        migrations.AlterField(
            model_name='laptopdetails',
            name='model',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Модель'),
        ),
        migrations.AlterField(
            model_name='laptopdetails',
            name='operating_system',
            field=models.CharField(choices=[('Windows 10 Home', 'Windows 10 home'), ('Windows 10 PRO', 'Windows 10 PRO'), ('Windows 11 home', 'Windows 11 home'), ('Windows 11 pro', 'Windows 11 pro'), ('Linux', 'Linux'), ('Mac OS', 'Mac OS'), ('Without OS', 'Without OS')], default='No info', max_length=50, verbose_name='Операционная система'),
        ),
        migrations.AlterField(
            model_name='laptopdetails',
            name='screen_resolution',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Разрешение экрана'),
        ),
        migrations.AlterField(
            model_name='laptopdetails',
            name='screen_type',
            field=models.CharField(choices=[('No info', 'No info'), ('IPS', 'IPS'), ('IGZO', 'IGZO'), ('VA', 'VA'), ('TN+Film', 'TN+Film'), ('OLED', 'OLED'), ('other', 'other')], default='No info', max_length=50, verbose_name='Тип матрицы монитора'),
        ),
        migrations.AlterField(
            model_name='laptopdetails',
            name='uid',
            field=models.SmallIntegerField(unique=True, verbose_name='Уникальный идентификатор'),
        ),
        migrations.AlterField(
            model_name='laptopdetails',
            name='weight',
            field=models.FloatField(blank=True, null=True, verbose_name='Вес ноутбука'),
        ),
        migrations.AlterField(
            model_name='laptopdetails',
            name='width',
            field=models.FloatField(blank=True, null=True, verbose_name='Ширина'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='brightness',
            field=models.IntegerField(blank=True, null=True, verbose_name='Яркость'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='color',
            field=models.CharField(blank=True, max_length=40, null=True, verbose_name='Цвет'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='connector_HDMI',
            field=models.BooleanField(default=False, verbose_name='Разъём HDMI'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='connector_VGA',
            field=models.BooleanField(default=False, verbose_name='Разъём VGA'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='diagonal',
            field=models.FloatField(blank=True, null=True, verbose_name='Диагональ экрана'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='frequency',
            field=models.CharField(choices=[('No info', 'no information'), ('60', '60 ГЦ'), ('144', '144 ГЦ'), ('160', '160 ГЦ'), ('240', '240 ГЦ'), ('360', '360 ГЦ')], default='0', max_length=50, verbose_name='Частота обновления'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='height',
            field=models.FloatField(blank=True, null=True, verbose_name='Высота без подставки'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='model',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Модель'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='resolution',
            field=models.CharField(blank=True, max_length=20, null=True, verbose_name='Разрешение'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='uid',
            field=models.SmallIntegerField(unique=True, verbose_name='Уникальный идентификатор'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='weight',
            field=models.FloatField(blank=True, null=True, verbose_name='Вес монитора'),
        ),
        migrations.AlterField(
            model_name='monitordetails',
            name='width',
            field=models.FloatField(blank=True, null=True, verbose_name='Ширина монитора'),
        ),
        migrations.CreateModel(
            name='KeyboardDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(default=product.models.add_uniq_uid, max_length=12, unique=True)),
                ('model', models.CharField(max_length=200, verbose_name='Модель')),
                ('keyboard_type', models.CharField(choices=[('no info', 'no info'), ('Мембранная', 'Мембранная'), ('Резиновая', 'Резиновая'), ('Механическая', 'Механическая'), ('Оптическая', 'Оптическая')], default='No info', max_length=100, verbose_name='Тип клавиатуры')),
                ('color', models.CharField(choices=[('no info', 'no info'), ('Black', 'Black'), ('White', 'White'), ('Green', 'Green'), ('Red', 'Red'), ('Blue', 'Blue'), ('Yellow', 'Yellow')], default='no info', max_length=20, verbose_name='Цвет')),
                ('key_backlight', models.BooleanField(default=False, verbose_name='Подсветка клавиш')),
                ('keycap_material', models.CharField(choices=[('no info', 'no info'), ('PBT', 'Polybutylene terephthalate'), ('ABS ', 'Acrylonitrile butadiene styrene')], default='no info', max_length=20, verbose_name='Материал кейкапов')),
                ('total_number_of_keys', models.IntegerField(default=0, verbose_name='Количество клавиш')),
                ('function_key', models.BooleanField(default=False)),
                ('programmable_keys', models.BooleanField(default=False)),
                ('case_material', models.CharField(choices=[('no info', 'no info'), ('Пластик', 'Plastic'), ('Алюминий', 'Aluminum')], default='no info', max_length=20, verbose_name='Материал корпуса')),
                ('water_protection', models.BooleanField(default=False, verbose_name='Защита от воды')),
                ('connection', models.CharField(choices=[('no info', 'no info'), ('USB', 'USB'), ('PS/2', 'PS/2')], default='no info', max_length=20, verbose_name='Интерфейс подключения')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='KeyboardDetails', to='product.product')),
            ],
        ),
    ]
