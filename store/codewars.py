def find_drop(road: str) -> int:
    result = 0
    for step in range(1, len(road)):
        if road[step - 1] == 'D' and road[step] == 'U':
            result += 1
    return result


def find_drop_2(road: str) -> int:
    middle, result = 0, 0
    for step in range(len(road)):

        if road[step] == 'U':
            middle += 1
        else:
            middle -= 1
        if middle == 0:
            if road[step] == 'U':
                result += 1
    return result


n = 'UUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUDUUDDDUUUDDDDDUUDDUDUDUDUUUUDUDDDDUUUUUUDDDUUD'
print(find_drop(n))
print(find_drop_2(n))