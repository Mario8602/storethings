version: '3.8'
services:
  internet-shop:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./store:/store #связывает локальную папку с папкой в контейнере.
    environment:
      - DB_HOST=database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass
      - SOLR_URL=http://solr:8983/solr/

    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"

    depends_on:
      - database

  database:
    image: postgres:14.6-alpine
    container_name: store_postgres
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - 5050:80

  rabbit:
    image: rabbitmq:3.11.0-management-alpine
    hostname: rabbit
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=mypass
    ports:
      - 15672:15672
      - 5672:5672

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=amqp://myuser:mypass@rabbit:5672/
      - FLOWER_PORT=8888
    ports:
      - 8888:8888
    depends_on:
      - rabbit
      - worker

#  erlang:
#    image: erlang:2
#    hostname: erlang

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A storething worker -l info #--loglevel=info
    volumes:
      - ./store:/store
    links:
      - rabbit
    depends_on:
      - rabbit

  solr:
    image: solr:8.11.1
    container_name: solr
    ports:
      - "8983:8983"
    volumes:
      - ./data:/var/solr
    depends_on:
      - internet-shop
    command: >
      solr-precreate
      gettingstarted

#volumes:
#  data:

#  solr:
#    image: solr:9.0.0
#    container_name: solr
#    ports:
#      - "8983:8983"
#    volumes:
#      - ./solr-data:/opt/solr/server/solr/mycores
#      - ./solr-config:/opt/solr/my-config-dir
#    environment:
#      - solr.allowPaths=/opt/solr,/opt/solr/server/solr/mycores,/opt/solr/my-config-dir
#    command: bash -c "solr start && solr create_core -c my_new_core -d /opt/solr/server/solr/mycores -n data_driven_schema_configs -s /opt/solr/my-config-dir/schema.xml.bak -c /opt/solr/my-config-dir/solrconfig.xml"

#  solr:
#    image: solr:9.0
#    ports:
#      - "8983:8983"
#    volumes:
#      - data:/var/solr
#    entrypoint:
#      - bash
#      - "-c"
#      - "precreate-core core0; exec solr -f"
#
#volumes:
#  data:

#  solr:
#    image: solr:8.0-alpine
#    container_name: solr
#    ports:
#      - "8983:8983"
#    entrypoint:
#      - bash
#      - "-c"
#      - "precreate-core core0; precreate-core core1; exec solr -f"
#    volumes:
#      - data:/var/solr

#volumes:
#  data:

#  solr1:
#    image: solr:9.0
#    container_name: solr1
#    ports:
#      - "8981:8983"
#    environment:
#      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
#    networks:
#      - solr
#    depends_on:
#      - zoo1
#      - zoo2
#      - zoo3
##    volumes:
##      - #/Solr:/var/solr
#
#  solr2:
#    image: solr:9.0
#    container_name: solr2
#    ports:
#      - "8982:8983"
#    environment:
#      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
#    networks:
#      - solr
#    depends_on:
#      - zoo1
#      - zoo2
#      - zoo3
##    volumes:
##      - #/Solr:/var/solr
#
#  solr3:
#    image: solr:9.0
#    container_name: solr3
#    ports:
#      - "8983:8983"
#    environment:
#      - ZK_HOST=zoo1:2181,zoo2:2181,zoo3:2181
#    networks:
#      - solr
#    depends_on:
#      - zoo1
#      - zoo2
#      - zoo3
##    volumes:
##      - #/Solr:/var/solr
#
#  zoo1:
#    image: zookeeper:3.8
#    container_name: zoo1
#    restart: always
#    hostname: zoo1
#    ports:
#      - 2181:2181
#      - 7001:7000
#    environment:
#      ZOO_MY_ID: 1
#      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
#      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
#      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
#    networks:
#      - solr
#
#  zoo2:
#    image: zookeeper:3.8
#    container_name: zoo2
#    restart: always
#    hostname: zoo2
#    ports:
#      - 2182:2181
#      - 7002:7000
#    environment:
#      ZOO_MY_ID: 2
#      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
#      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
#      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
#    networks:
#      - solr
#
#  zoo3:
#    image: zookeeper:3.8
#    container_name: zoo3
#    restart: always
#    hostname: zoo3
#    ports:
#      - 2183:2181
#      - 7003:7000
#    environment:
#      ZOO_MY_ID: 3
#      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
#      ZOO_4LW_COMMANDS_WHITELIST: mntr, conf, ruok
#      ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7000 metricsProvider.exportJvmInfo=true"
#    networks:
#      - solr
#
#networks:
#  solr: